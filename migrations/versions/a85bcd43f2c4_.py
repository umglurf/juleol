"""empty message

Revision ID: a85bcd43f2c4
Revises:
Create Date: 2019-07-26 23:00:38.076197

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a85bcd43f2c4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'admins',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('password', sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint('id')
        )

    op.create_table(
        'tastings',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('year', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('year')
        )

    op.create_table(
        'beers',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('number', sa.SmallInteger(), nullable=False),
        sa.Column('tasting_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['tasting_id'], ['tastings.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('number', 'tasting_id')
        )

    op.create_table(
        'notes',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('note', sa.Text(), nullable=False),
        sa.Column('tasting_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['tasting_id'], ['tastings.id'], ),
        sa.PrimaryKeyConstraint('id')
        )

    op.create_table(
        'participants',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('password', sa.String(length=255), nullable=False),
        sa.Column('tasting_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['tasting_id'], ['tastings.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name', 'tasting_id')
        )

    op.create_table(
        'score_aftertaste',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('score', sa.SmallInteger(), nullable=True),
        sa.Column('beer_id', sa.Integer(), nullable=False),
        sa.Column('participant_id', sa.Integer(), nullable=False),
        sa.Column('tasting_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['beer_id'], ['beers.id'], ),
        sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], ),
        sa.ForeignKeyConstraint(['tasting_id'], ['tastings.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('tasting_id', 'participant_id', 'beer_id')
        )

    op.create_table(
        'score_look',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('score', sa.SmallInteger(), nullable=True),
        sa.Column('beer_id', sa.Integer(), nullable=False),
        sa.Column('participant_id', sa.Integer(), nullable=False),
        sa.Column('tasting_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['beer_id'], ['beers.id'], ),
        sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], ),
        sa.ForeignKeyConstraint(['tasting_id'], ['tastings.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('tasting_id', 'participant_id', 'beer_id')
        )

    op.create_table(
        'score_smell',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('score', sa.SmallInteger(), nullable=True),
        sa.Column('beer_id', sa.Integer(), nullable=False),
        sa.Column('participant_id', sa.Integer(), nullable=False),
        sa.Column('tasting_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['beer_id'], ['beers.id'], ),
        sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], ),
        sa.ForeignKeyConstraint(['tasting_id'], ['tastings.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('tasting_id', 'participant_id', 'beer_id')
        )

    op.create_table(
        'score_taste',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('score', sa.SmallInteger(), nullable=True),
        sa.Column('beer_id', sa.Integer(), nullable=False),
        sa.Column('participant_id', sa.Integer(), nullable=False),
        sa.Column('tasting_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['beer_id'], ['beers.id'], ),
        sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], ),
        sa.ForeignKeyConstraint(['tasting_id'], ['tastings.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('tasting_id', 'participant_id', 'beer_id')
        )

    op.create_table(
        'score_xmas',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('score', sa.SmallInteger(), nullable=True),
        sa.Column('beer_id', sa.Integer(), nullable=False),
        sa.Column('participant_id', sa.Integer(), nullable=False),
        sa.Column('tasting_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['beer_id'], ['beers.id'], ),
        sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], ),
        sa.ForeignKeyConstraint(['tasting_id'], ['tastings.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('tasting_id', 'participant_id', 'beer_id')
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('score_xmas')
    op.drop_table('score_taste')
    op.drop_table('score_smell')
    op.drop_table('score_look')
    op.drop_table('score_aftertaste')
    op.drop_table('participants')
    op.drop_table('notes')
    op.drop_table('beers')
    op.drop_table('tastings')
    op.drop_table('admins')
    # ### end Alembic commands ###
